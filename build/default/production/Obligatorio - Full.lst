MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; PIC16F887 Configuration Bit Settings
                      00002 ; Assembly source line config statements
                      00003 #include "p16f887.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 17 2019
                      00005 ;  MPASM PIC16F887 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00810         LIST
                      00004     
                      00005 ; Bits de configuracion
                      00006 
                      00007 ; CONFIG1
                      00008 ; __config 0xE0C2
2007   20C2           00009  __CONFIG _CONFIG1, _FOSC_HS & _WDTE_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _I
                            ESO_OFF & _FCMEN_OFF & _LVP_OFF
                      00010 ; CONFIG2
                      00011 ; __config 0xFEFF
2008   3EFF           00012  __CONFIG _CONFIG2, _BOR4V_BOR21V & _WRT_OFF
                      00013 
                      00014 ; Organizacion de la memoria EEPROM.
                      00015 ; 0x30 -> Flag que indica si está¡ usado el buffer o no.
                      00016 ; 0x31 -> Puntero actual del buffer.
                      00017 ; 0x40 - 0x49 -> Buffer.
                      00018     
                      00019 ; Organizacion de la memoria de datos 
Warning[205]: Found directive in column 1. (cblock)
                      00020 cblock 0x20     ; Comienzo a escribir la memoria de datos en la direccion 0x20
                      00021 ; Definicion de variables
  00000020            00022     ASCII_CONVERSION
  00000021            00023     ASCII_TEMP
  00000022            00024     ASCII1
  00000023            00025     ASCII2
  00000024            00026     ASCII3
  00000025            00027     COCIENTE
  00000026            00028     CONTADOR_
  00000027            00029     CONTADOR_1
  00000028            00030     CONTADOR_2
  00000029            00031     CONTADOR_TIMER1
  0000002A            00032     DELAY_1MS_CONTADOR_1
  0000002B            00033     DELAY_1MS_CONTADOR_2
  0000002C            00034     DELAY_CONTADOR
  0000002D            00035     DIVIDENDO
  0000002E            00036     DIVISOR_REGLA
  0000002F            00037     ITERADOR
  00000030            00038     MULT
  00000031            00039     MULTIPLICANDO
  00000032            00040     MULTIPLICANDO_REGLA
  00000033            00041     PRODH
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00042     PRODL
  00000035            00043     PUNTERO_ACTUAL
  00000036            00044     REGLAE
  00000037            00045     REGLAF
  00000038            00046     RESTO
  00000039            00047     SIGUIENTE_PUNTERO
  0000003A            00048     STATUS_TEMP
  0000003B            00049     STATUS_TEMP_CASE
  0000003C            00050     TEMP_W
  0000003D            00051     VALOR_CONVERSION
  0000003E            00052     VALOR_CONVERSION_MEMORIA
  0000003F            00053     VALOR_CONVERSION_REGLA
  00000040            00054     VALOR_CONVERSION_TEMP
  00000041            00055     VALOR_CONVERSIONH
  00000042            00056     VALOR_CONVERSIONL
  00000043            00057     W_TEMP
  00000044            00058     W_TEMP_CASE
                      00059 
                      00060 
Warning[205]: Found directive in column 1. (ENDC)
                      00061 endc
                      00062    
                      00063 ;Organizacion de la memoria de programacion
Warning[205]: Found directive in column 1. (org)
                      00064 org 0x0000
Warning[203]: Found opcode in column 1. (goto)
0000   2???           00065 goto main
                      00066 
Warning[205]: Found directive in column 1. (org)
                      00067 org 0x0004
Warning[203]: Found opcode in column 1. (goto)
0004   2???           00068 goto interrupt
                      00069 
                      00070 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; PROGRAMA PRINCIPAL ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00071         
0005                  00072 main
0005   2???           00073     call configuracion_inicial
                      00074     
0006                  00075 mainloop
0006   2???           00076     call realizar_conversion
                      00077     ; NOTA: PARA REALIZAR SIN INTERRUPCIONES, DESCOMENTAR ESTO:
                      00078 ;    call leer_usart
0007   2???           00079     goto mainloop
                      00080         
                      00081 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; RUTINA DE INTERRUPCION ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00082 
0008                  00083 interrupt
0008   2???           00084     call guardar_contexto
                      00085 
                      00086     ; Identifico la interrupcion.
0009   1283 1303      00087     banksel PIR1
000B   1C0C           00088     btfss PIR1, TMR1IF ; Interrupcion timer1?
000C   2???           00089     goto $+3
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D   100C           00090     bcf PIR1, TMR1IF
000E   2???           00091     call interrupt_tmr1    
                      00092 
                      00093     ; NOTA: PARA SACAR LAS INTERRUPCIONES DE USART, COMENTAR ESTO:
000F   1283 1303      00094     banksel PIR1
0011   1E8C           00095     btfss PIR1, RCIF ; Interrupcion usart?
0012   2???           00096     goto $+3
0013   128C           00097     bcf PIR1, RCIF
0014   2???           00098     call interrupt_usart
                      00099     
0015   1283 1303      00100     banksel PIR2
0017   1E0D           00101     btfss PIR2, EEIF; Interrupcion escritura?
0018   2???           00102     goto $+3
0019   120D           00103     bcf PIR2, EEIF
001A   2???           00104     call interrupt_eeprom    
                      00105 
001B   2???           00106     call cargar_contexto
001C   0009           00107     retfie ; interrupt
                      00108         
                      00109 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; CONFIGURACION INICIAL ;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00110 
001D                  00111 configuracion_inicial   
                      00112     ; Configuro las entradas de voltaje analogicas (PUERTOA).
001D   1683 1303      00113     banksel TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001F   1405           00114     bsf TRISA, 0 ; Seteo RA0 como entrada (perilla analogica)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0020   1485           00115     bsf TRISA, 1 ; Seteo RA1 como entrada (perilla analógica)
0021   1683 1703      00116     banksel ANSEL
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0023   1408           00117     bsf ANSEL, 0 ; Seto el puerto RA0 como analogico.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0024   1488           00118     bsf ANSEL, 1 ; Seto el puerto RA1 como analogico.
                      00119 
                      00120     ; Configuracion de la conversión analógica.
0025   1283 1303      00121     banksel ADRESH
0027   019E           00122     clrf ADRESH
0028   1683 1303      00123     banksel ADRESL
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002A   019E           00124     clrf ADRESL
002B   1683 1303      00125     banksel ADCON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002D   019F           00126     clrf ADCON1 ; ADFM = Left justified | VCFG1 = Vss | VCFG0 = Vdd     
                      00127     ; Configuración del reloj y encendido del conversor analogico.
002E   1283 1303      00128     banksel ADCON0 
0030   3081           00129     movlw b'10000001'
0031   009F           00130     movwf ADCON0 ; ADCS = Fosc/32 (TAD: 1.6(x10^-6)s) | ADON = ADC is enabled.
                      00131 
                      00132     ; Configuro las interrupciones.
0032   178B           00133     bsf INTCON, GIE ; Global interrupt enable bit.
0033   170B           00134     bsf INTCON, PEIE ; Pheripheral interrupt enable bit.
                      00135         
                      00136     ; Configuracion puerto serie (EUSART)
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137     ; Configuracion baudrate
0034   1683 1303      00138     banksel TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0036   1518           00139     bsf TXSTA, BRGH ; BRGH = High Speed
0037   1683 1703      00140     banksel BAUDCTL
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0039   1187           00141     bcf BAUDCTL, BRG16 ; BRG16 = 8-bit Baud Rate Generator is used.
003A   1683 1303      00142     banksel SPBRGH
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003C   019A           00143     clrf SPBRGH
003D   1683 1303      00144     banksel SPBRG
003F   3081           00145     movlw d'129'        
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0040   0099           00146     movwf SPBRG ; Baudrate 9600
                      00147     ; Configuro la transmision.
0041   1683 1303      00148     banksel TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0043   1698           00149     bsf TXSTA, TXEN  ; Transmit Enable bit = Transmit enabled
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0044   1218           00150     bcf TXSTA, SYNC  ; EUSART mode select bit = Asynchronous mode
                      00151     ; Configuro la recepcion.
0045   1283 1303      00152     banksel RCSTA
0047   1618           00153     bsf RCSTA, CREN  ; Continuous Recive Enable bit = Enables receiver
0048   1798           00154     bsf RCSTA, SPEN  ; Serial Port Enable bit = Serial port enabled.
                      00155     ; NOTA: PARA SACAR LAS INTERRUCIONES, COMENTAR ESTO:
0049   1683 1303      00156     banksel PIE1 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004B   168C           00157     bsf PIE1, RCIE ; Configuro que se generen interrupciones con la recepción
                      00158 
                      00159      ; Chequeo inicial de la memoria EEPROM.
004C   3030           00160     movlw 0x30
004D   2???           00161     call leer_memoria
                      00162     ; Chequeo que en la dirección 0x30 exista el valor 0x77. Si existe este 
                      00163     ; valor significa que la memoria está inicializada, sino hay que
                      00164     ; inicializarla.
004E   3C77           00165     sublw 0x77
                      00166     ; INICIO IF
004F   1903           00167         btfsc STATUS, Z
                      00168         ; THEN (w = 0x77)
0050   2???           00169         goto $+2
                      00170         ; ELSE (w <> 0x77)
0051   2???           00171         call inicializar_eeprom
                      00172     ; FIN IF   
                      00173     
                      00174      ; Configuro el timer1.
0052   1683 1303      00175     banksel PIE1 ;  Timer1 Overflow Interrupt Enable bit
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0054   140C           00176     bsf PIE1, TMR1IE    
0055   1283 1303      00177     banksel PIR1
0057   100C           00178     bcf PIR1, TMR1IF ; Timer1 Overflow Interrupt Flag bit
0058   1283 1303      00179     banksel T1CON
005A   1090           00180     bcf T1CON, TMR1CS ; Timer1 Clock Source Select bit = Clock
                      00181     ; Configurar preescaler timer1(1:8)
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005B   1610           00182     bsf T1CON, T1CKPS0
005C   1690           00183     bsf T1CON, T1CKPS1
005D   1410           00184     bsf T1CON, TMR1ON ; Encender el timer.
                      00185     ; Reinicio el contador tmr1.
005E   2???           00186     call re_iniciar_contador1
                      00187     ; Reinicio el timer1.
005F   2???           00188     call re_iniciar_timer1
                      00189         
0060   0008           00190     return ; configurar_puertos
                      00191 
                      00192 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;; RUTINAS PROGRAMA PRINCIPAL ;;;;;;;;;;;;;;;;;;;;;;
                      00193 
0061                  00194 leer_usart
0061   1283 1303      00195     banksel PIR1
0063   1E8C           00196     btfss PIR1, RCIF ; Interrupcion usart?
0064   2???           00197     goto $+3
0065   2???           00198     call interrupt_usart
0066   128C           00199     bcf PIR1, RCIF
                      00200     
0067   0008           00201     return ; leer_usart
                      00202     
                      00203 ; Lee el contenido del puerto y dervia en un case que indica que letra se
                      00204 ; ingresó.
0068                  00205 interrupt_usart
0068   1283 1303      00206     banksel RCREG
006A   081A           00207     movf RCREG, w
                      00208     
                      00209     ; Case letras:
006B   3A41           00210     xorlw b'01000001' ; 0x41 = 'A' (ASCII)
006C   1903           00211     btfsc STATUS, Z
006D   2???           00212     call rutina_letra_A
                      00213  
006E   3A09           00214     xorlw b'01001000' ^ b'01000001' ; 0x48 = 'H' (ASCII)
006F   1903           00215     btfsc STATUS, Z               
0070   2???           00216     call rutina_letra_H
                      00217     
0071   3A29           00218     xorlw b'01100001' ^ b'01001000' ; 0x61 = 'a' (ASCII)
0072   1903           00219     btfsc STATUS, Z               
0073   2???           00220     call rutina_letra_a
                      00221     
0074   0008           00222     return ; interrupt_usart
                      00223 
                      00224 ; Rutina de letra A: Obtiene el valor actual de la conversion y la envía por
                      00225 ; el puerto usart.
0075                  00226 rutina_letra_A
0075   1283 1303      00227     banksel VALOR_CONVERSION
0077   083D           00228     movf VALOR_CONVERSION, w
0078   2???           00229     call enviar_conversion_usart_hexa
                      00230 
0079   0008           00231     return ; rutina_letra_A
                      00232     
                      00233 ; Rutina de letra H: Obtiene los valores de memoria del buffer circular y los
                      00234 ; envía por el puerto usart.
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007A                  00235 rutina_letra_H    
                      00236     ; Leo el puntero del buffer actual.
007A   3031           00237     movlw 0x31
007B   2???           00238     call leer_memoria
                      00239     
                      00240     ; Guardo el valor del puntero actual.
007C   1283 1303      00241     banksel PUNTERO_ACTUAL
007E   00B5           00242     movwf PUNTERO_ACTUAL
                      00243     
                      00244     ; Guardo el valor inicial de ITERADOR.
007F   1283 1303      00245     banksel ITERADOR
0081   00AF           00246     movwf ITERADOR
                      00247 
Warning[207]: Found label after column 1. (WhileLoopInicio)
0082                  00248     WhileLoopInicio
                      00249         ; Obtengo el dato que apunta ITERADOR.
0082   1283 1303      00250         banksel ITERADOR
0084   082F           00251         movf ITERADOR, w
0085   1283 1703      00252         banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0087   008D           00253         movwf EEADR
0088   2???           00254         call leer_memoria
                      00255         
                      00256         ; Envío el dato (contenido en w) por el puerto usart.
0089   2???           00257         call enviar_conversion_usart_hexa
                      00258         ; Envío un salto de linea.
008A   300A           00259         movlw d'10'
008B   2???           00260         call enviar_w
                      00261         
                      00262         ; Incremento ITERADOR.
008C   1283 1303      00263         banksel ITERADOR
008E   03AF           00264         decf ITERADOR, f
                      00265         ; Chequeo que no me pase el buffer.
008F   082F           00266         movf ITERADOR, w
0090   3C3F           00267         sublw 0x3F
                      00268         ; INICIO IF
0091   1C03           00269             btfss STATUS, C         
                      00270             ; THEN (w > 0x3F)
0092   2???           00271             goto $+3
                      00272             ; ELSE (w <= 0x3F)
0093   3049           00273             movlw 0x49
0094   00AF           00274             movwf ITERADOR
                      00275         ; FIN IF
                      00276         
                      00277         ; Compruebo que no llegue al PUNTERO_ACTUAL (fin del loop)      
0095   1283 1303      00278         banksel PUNTERO_ACTUAL
0097   0835           00279         movf PUNTERO_ACTUAL, w
0098   1283 1303      00280         banksel ITERADOR
009A   022F           00281         subwf ITERADOR, w
                      00282         ; INICIO IF
009B   1903           00283             btfsc STATUS, Z
                      00284             ; THEN (ITERADOR = PUNTERO_ACTUAL)
009C   2???           00285             goto $+2 
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00286             ; ELSE (ITERADOR <> PUNTERO_ACTUAL)
009D   2???           00287             goto WhileLoopInicio
                      00288         ; FIN IF
                      00289         
009E   0008           00290     return ; rutina_letra_H
                      00291     
                      00292 ; Manda la conversion en formato decimal.
009F                  00293 rutina_letra_a    
009F   1283 1303      00294     banksel VALOR_CONVERSION
00A1   083D           00295     movf VALOR_CONVERSION, w
00A2   2???           00296     call enviar_conversion_usart_dec
                      00297     
                      00298      ; Envío grados centrígrados.
00A3   30BA           00299     movlw d'186' ; °
00A4   2???           00300     call enviar_w
00A5   3043           00301     movlw d'67' ; C
00A6   2???           00302     call enviar_w
                      00303     
00A7   0008           00304     return ; rutina_letra_a
                      00305 
                      00306 ; Obtiene el valor de la conversion en w, lo mapea a decimal y lo envía por el
                      00307 ; puerto usart.
00A8                  00308 enviar_conversion_usart_dec
00A8   1283 1303      00309     banksel VALOR_CONVERSION_TEMP
00AA   00C0           00310     movwf VALOR_CONVERSION_TEMP
                      00311     
00AB   1283 1303      00312     banksel MULTIPLICANDO_REGLA
00AD   3064           00313     movlw d'100'
00AE   00B2           00314     movwf MULTIPLICANDO_REGLA
                      00315     
00AF   1283 1303      00316     banksel DIVISOR_REGLA
00B1   30FF           00317     movlw d'255'
00B2   00AE           00318     movwf DIVISOR_REGLA
                      00319  
00B3   1283 1303      00320     banksel VALOR_CONVERSION_TEMP
00B5   0840           00321     movf VALOR_CONVERSION_TEMP, w
                      00322     
00B6   2???           00323     call regla_de_tres
                      00324     
00B7   1283 1303      00325     banksel REGLAE
00B9   0836           00326     movf REGLAE, w
00BA   2???           00327     call mapear_enviar_dec
                      00328     
00BB   0008           00329     return ; enviar_conversion_usart_dec
                      00330     
                      00331 ; Realiza una regla de tres.
                      00332 ; w = w*MULTIPLICANDO_REGLA/DIVISOR_REGLA
00BC                  00333 regla_de_tres
00BC   1283 1303      00334     banksel VALOR_CONVERSION_REGLA
00BE   00BF           00335     movwf VALOR_CONVERSION_REGLA
00BF   0832           00336     movf MULTIPLICANDO_REGLA, w
00C0   00B1           00337     movwf MULTIPLICANDO
00C1   083F           00338     movf VALOR_CONVERSION_REGLA, w
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C2   2???           00339     call multiplicar
                      00340     
                      00341     ; Si la multiplicación dio 0, devuelvo 0.
00C3   1283 1303      00342     banksel PRODH
00C5   08B3           00343     movf PRODH, f
                      00344     ; INICIO IF
00C6   1D03           00345         btfss STATUS, Z
                      00346         ; THEN (PRODH <> 0)
00C7   2???           00347         goto $+7
                      00348         ; ELSE (PRODH = 0)
00C8   1283 1303      00349         banksel PRODL
00CA   08B4           00350         movf PRODL, f
                      00351         ; INICIO IF
00CB   1D03           00352             btfss STATUS, Z
                      00353             ; THEN (PRODL <> 0)
00CC   2???           00354             goto $+2
                      00355             ; ELSE (PRODL = 0)
00CD   3400           00356             retlw 0 ; Si es 0 el producto, devuelvo 0 porque no puedo dividir.
                      00357         ; FIN IF
                      00358     ; FIN IF
                      00359     
                      00360     ; LOS PARAMETROS DE dividir YA ESTAN CARGADOS, CARGO SOLO w.
00CE   1283 1303      00361     banksel DIVISOR_REGLA
00D0   082E           00362     movf DIVISOR_REGLA, w
00D1   2???           00363     call dividir
                      00364     
00D2   1283 1303      00365     banksel COCIENTE
00D4   0825           00366     movf COCIENTE, w
00D5   00B6           00367     movwf REGLAE
00D6   0838           00368     movf RESTO, w
00D7   00B7           00369     movwf REGLAF    
                      00370     
00D8   0008           00371     return ; regla_de_tres
                      00372 
                      00373 ; Multiplica dos numeros.
                      00374 ; MULTIPLICANDO * w = PRODH:PRODL
00D9                  00375 multiplicar
00D9   1283 1303      00376     banksel MULT
00DB   00B0           00377     movwf MULT
                      00378     
                      00379     ; Limpio los resultados.
00DC   1283 1303      00380     banksel PRODL
00DE   01B4           00381     clrf PRODL
00DF   01B3           00382     clrf PRODH
                      00383     
00E0   1283 1303      00384     banksel MULTIPLICANDO
00E2   08B1           00385     movf MULTIPLICANDO, f
                      00386     ; INICIO IF
00E3   1903           00387         btfsc STATUS, Z
                      00388         ; THEN (MULTIPLICANDO = 0)
00E4   0008           00389         return
                      00390         ; ELSE (MULTIPLICANDO <> 0)
Warning[207]: Found label after column 1. (multiplicar_loop)
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E5                  00391         multiplicar_loop
00E5   1283 1303      00392             banksel MULT
00E7   0830           00393             movf MULT, w
00E8   1283 1303      00394             banksel PRODL
00EA   07B4           00395             addwf PRODL, f
00EB   1803           00396             btfsc STATUS, C
00EC   0AB3           00397             incf PRODH, f
00ED   0BB1           00398             decfsz MULTIPLICANDO, f
00EE   2???           00399             goto multiplicar_loop           
                      00400     ; FIN IF
00EF   0008           00401     return ; multiplicar
                      00402 
                      00403 ; Divide dos numeros.
                      00404 ; PRODH:PRODL/w = w*COCIENTE + RESTO
00F0                  00405 dividir
00F0   1283 1303      00406     banksel COCIENTE
00F2   01A5           00407     clrf COCIENTE
00F3   01B8           00408     clrf RESTO
00F4   00AD           00409     movwf DIVIDENDO
                      00410     
Warning[207]: Found label after column 1. (loop_dividir)
00F5                  00411     loop_dividir
00F5   1283 1303      00412         banksel PRODH
00F7   08B3           00413         movf PRODH, f
                      00414         ; INICIO IF
00F8   1D03           00415             btfss STATUS, Z
                      00416             ; THEN (PRODH <> 0)
00F9   2???           00417             goto restar_dividir
                      00418             ; ELSE (PRODH = 0)
00FA   082D           00419             movf DIVIDENDO, w
00FB   0234           00420             subwf PRODL, w
                      00421             ; INICIO IF
00FC   1803           00422                 btfsc STATUS, C
                      00423                 ; THEN (PRODL >= DIVIDENDO)
00FD   2???           00424                 goto restar_dividir
                      00425                 ; ELSE (PRODL < DIVIDENDO)
00FE   0834           00426                 movf PRODL, w
00FF   00B8           00427                 movwf RESTO
0100   0008           00428                 return ; dividir
                      00429             ; FIN IF
                      00430         ; FIN IF
                      00431         
Warning[207]: Found label after column 1. (restar_dividir)
0101                  00432         restar_dividir
0101   1283 1303      00433             banksel COCIENTE
0103   0AA5           00434             incf COCIENTE, f
                      00435             
0104   082D           00436             movf DIVIDENDO, w
0105   02B4           00437             subwf PRODL, f
                      00438             ; INICIO IF
0106   1803           00439                 btfsc STATUS, C
                      00440                 ; THEN (PRODL < DIVIDENDO)
0107   2???           00441                 goto $+2
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00442                 ; ELSE (PRODL >= DIVIDENDO)
0108   03B3           00443                 decf PRODH, f
0109   2???           00444             goto loop_dividir
                      00445 
                      00446 ; Mapea y envía un valor decimal por el puerto usart.
010A                  00447 mapear_enviar_dec
010A   2???           00448     call convertir_valor_dec
010B   1283 1303      00449     banksel ASCII_TEMP
010D   00A1           00450     movwf ASCII_TEMP
010E   0820           00451     movf ASCII_CONVERSION, w
010F   00A4           00452     movwf ASCII3 ; Almaceno el resultado
                      00453     
0110   0821           00454     movf ASCII_TEMP, w
0111   2???           00455     call convertir_valor_dec
0112   1283 1303      00456     banksel ASCII_TEMP
0114   00A1           00457     movwf ASCII_TEMP
0115   0820           00458     movf ASCII_CONVERSION, w
0116   00A3           00459     movwf ASCII2 ; Almaceno el resultado
                      00460     
0117   0821           00461     movf ASCII_TEMP, w
0118   2???           00462     call convertir_valor_dec
0119   1283 1303      00463     banksel ASCII_TEMP
011B   00A1           00464     movwf ASCII_TEMP
011C   0820           00465     movf ASCII_CONVERSION, w
011D   00A2           00466     movwf ASCII1 ; Almaceno el resultado
                      00467     
011E   1283 1303      00468     banksel ASCII1
0120   0822           00469     movf ASCII1, w
0121   2???           00470     call enviar_w
                      00471     
0122   1283 1303      00472     banksel ASCII2
0124   0823           00473     movf ASCII2, w
0125   2???           00474     call enviar_w
                      00475     
0126   1283 1303      00476     banksel ASCII3
0128   0824           00477     movf ASCII3, w
0129   2???           00478     call enviar_w   
                      00479     
012A   0008           00480     return ; mapear_enviar_dec
                      00481     
                      00482 ; Convierte solo una parte del valor en w.
                      00483 ; ASCII_CONVERSION = w MOD DIVISOR
                      00484 ; w = w/DIVISOR
012B                  00485 convertir_valor_dec
012B   1283 1303      00486     banksel PRODL
012D   00B4           00487     movwf PRODL
012E   300A           00488     movlw d'10'
012F   2???           00489     call dividir
                      00490     
0130   1283 1303      00491     banksel RESTO
0132   0838           00492     movf RESTO, w    
0133   3E30           00493     addlw b'00110000' ; Sumo 30.
0134   00A0           00494     movwf ASCII_CONVERSION ; Almaceno el resultado
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00495     
0135   1283 1303      00496     banksel COCIENTE
0137   0825           00497     movf COCIENTE, w
                      00498     
0138   0008           00499     return ; convertir_valor_dec
                      00500     
                      00501 ; Obtiene el valor de la conversión en w, lo mapea y lo envía por el puerto
                      00502 ; usart.
0139                  00503 enviar_conversion_usart_hexa    
0139   1283 1303      00504     banksel VALOR_CONVERSION_TEMP
013B   00C0           00505     movwf VALOR_CONVERSION_TEMP
                      00506 
                      00507     ; Obtengo los valores High y Low de la conversion.
013C   39F0           00508     andlw b'11110000'
013D   1283 1303      00509     banksel VALOR_CONVERSIONH
013F   00C1           00510     movwf VALOR_CONVERSIONH
0140   0EC1           00511     swapf VALOR_CONVERSIONH, f  ; Hago swamp para cambiar de lugar y 
                      00512                                 ; tener todos en los bits menos significativos.
                      00513     
0141   1283 1303      00514     banksel VALOR_CONVERSION_TEMP
0143   0840           00515     movf VALOR_CONVERSION_TEMP, w
0144   390F           00516     andlw b'00001111'
0145   1283 1303      00517     banksel VALOR_CONVERSIONL
0147   00C2           00518     movwf VALOR_CONVERSIONL
                      00519     
0148   1283 1303      00520     banksel VALOR_CONVERSIONH
014A   0841           00521     movf VALOR_CONVERSIONH, w
014B   2???           00522     call mapear_enviar_hexa
                      00523     
                      00524     ; Mapeo y envío los valores por el puerto usart.
014C   1283 1303      00525     banksel VALOR_CONVERSIONL
014E   0842           00526     movf VALOR_CONVERSIONL, w
014F   2???           00527     call mapear_enviar_hexa    
                      00528     
0150   0008           00529     return ; enviar_conversion_usart_hexa
                      00530         
                      00531 ; Mapea el valor de w a un caracter ASCII y lo envía por el puerto USART.
0151                  00532 mapear_enviar_hexa 
0151   2???           00533     call mapear_hexa
0152   2???           00534     call enviar_w
0153   0008           00535     return ; mapear_enviar_hexa
                      00536         
                      00537 ; Envia el valor del registro w por el puerto USART.
0154                  00538 enviar_w
0154   1283 1303      00539     banksel PIR1
0156   1E0C           00540     btfss PIR1, TXIF ; Esta vacío el bus de transmisión?
0157   2???           00541     goto $-1 ; No, vuelvo a chequear hasta que esté libre.
0158   1283 1303      00542     banksel TXREG
015A   0099           00543     movwf TXREG 
015B   0008           00544     return ; enviar_w
                      00545         
                      00546 ; Mapea el valor de w a un caracter ASCII y lo guarda en w.
015C                  00547 mapear_hexa
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015C   1283 1303      00548     banksel TEMP_W
015E   00BC           00549     movwf TEMP_W
015F   3C09           00550     sublw b'00001001' ; 0x09 -> 9 decimal
                      00551     ; INICIO IF
0160   1C03           00552         btfss STATUS, C
                      00553         ; THEN (w > 9)
0161   2???           00554         goto sumar_37 ; Es mayor a 9, entonces sumo 0x37 = 0011 0111
                      00555         ; ELSE (w <= 9)
0162   2???           00556         goto sumar_30 ; Es menor o igual 9, entonces sumo 0x30 = 0011 0000
                      00557     ; FIN IF
                      00558 
                      00559 ; Sumo 30h al valor que tengo en w.
0163                  00560 sumar_30
0163   1283 1303      00561     banksel TEMP_W
0165   083C           00562     movf TEMP_W, w
0166   3E30           00563     addlw b'00110000' ; 0x30 -> 48 decimal
0167   0008           00564     return ; mapear_hexa
                      00565 
                      00566 ; Sumo 37h al valor que tengo en w.
0168                  00567 sumar_37
0168   1283 1303      00568     banksel TEMP_W
016A   083C           00569     movf TEMP_W, w
016B   3E37           00570     addlw b'00110111' ; 0x37 -> 55 decimal
016C   0008           00571     return ; mapear_hexa
                      00572         
                      00573 ; Inicializa la memoria EEPROM.
016D                  00574 inicializar_eeprom
                      00575     ; Inicializo la flag de memoria inicializada.
                      00576     ; Cargo 0x30 (Puntero flag del buffer)
016D   3030           00577     movlw 0x30
016E   1283 1703      00578     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0170   008D           00579     movwf EEADR
                      00580     ; Cargo el dato que indica que está inicializada la memoria.
0171   3077           00581     movlw 0x77
0172   1283 1703      00582     banksel EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0174   008C           00583     movwf EEDAT
                      00584     ; Guardo el valor de w en memoria.
0175   2???           00585     call guardar_memoria
                      00586 
                      00587     ; Inicializo el puntero inicial del donde arranca el buffer.
                      00588     ; Cargo 0x31 (SIGUIENTE_PUNTERO)
0176   3031           00589     movlw 0x31
0177   1283 1703      00590     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0179   008D           00591     movwf EEADR
                      00592     ; Cargo el dato que indica que está inicializada la memoria.
017A   3049           00593     movlw 0x49
017B   1283 1703      00594     banksel EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
017D   008C           00595     movwf EEDAT
                      00596     ; Guardo el valor de w en memoria.
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017E   2???           00597     call guardar_memoria
                      00598 
017F   0008           00599     return ; inicializar_eeprom
                      00600 
                      00601 ; Guarda el valor de VALOR_CONVERSION en el buffer circular.
0180                  00602 guardar_memoria_VALOR_CONVERSION
                      00603     ; Cargo SIGUIENTE_PUNTERO e impacto en memoria.
0180   2???           00604     call obtener_siguiente_puntero
                      00605     ; Cargo el dato de VALOR_CONVERSION en EEDAT.
0181   1283 1303      00606     banksel VALOR_CONVERSION
0183   083D           00607     movf VALOR_CONVERSION, w
0184   1283 1703      00608     banksel EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0186   008C           00609     movwf EEDAT
                      00610     ; Cargo el puntero de SIGUIENTE_PUNTERO en EEADR.
0187   1283 1303      00611     banksel SIGUIENTE_PUNTERO
0189   0839           00612     movf SIGUIENTE_PUNTERO, w
018A   1283 1703      00613     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
018C   008D           00614     movwf EEADR
                      00615     ; Guardo el valor de w en memoria.
018D   2???           00616     call guardar_memoria
                      00617 
018E   0008           00618     return ; guardar_memoria_VALOR_CONVERSION
                      00619 
                      00620 ; Obtiene y guarda el siguiente puntero del buffer en memoria.  
018F                  00621 obtener_siguiente_puntero
                      00622     ; Cargo 0X31 (Puntero de SIGUIENTE_PUNTERO) en EEADR
018F   3031           00623     movlw 0x31
0190   1283 1703      00624     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0192   008D           00625     movwf EEADR
                      00626     ; Cargo el valor de memoria en w.
0193   2???           00627     call leer_memoria
                      00628 
                      00629     ; Sumo 1 al puntero.
0194   3E01           00630     addlw d'1'
0195   1283 1303      00631     banksel SIGUIENTE_PUNTERO
0197   00B9           00632     movwf SIGUIENTE_PUNTERO
                      00633 
                      00634     ; Chequeo que no me pase del buffer.
0198   3C49           00635     sublw 0x49
                      00636     ; INICIO IF
0199   1803           00637         btfsc STATUS, C
                      00638         ; THEN (w <= 0x49)
019A   2???           00639         goto $+3
                      00640         ; ELSE (w > 0x49)
019B   3040           00641         movlw 0x40
019C   00B9           00642         movwf SIGUIENTE_PUNTERO
                      00643     ; FIN IF
                      00644 
                      00645     ; Cargo el dato de SIGUIENTE_PUNTERO en EEDAT.
019D   0839           00646     movf SIGUIENTE_PUNTERO, w
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019E   1283 1703      00647     banksel EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01A0   008C           00648     movwf EEDAT
                      00649     ; Cargo el puntero de SIGUIENTE_PUNTERO en EEADR.
01A1   3031           00650     movlw 0x31
01A2   1283 1703      00651     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01A4   008D           00652     movwf EEADR
                      00653     ; Guardo el valor de w en memoria.
01A5   2???           00654     call guardar_memoria        
                      00655 
01A6   0008           00656     return ; obtener_siguiente_puntero
                      00657 
                      00658 ; Leo un valor ya seteado en EEADR de memoria en w.
01A7                  00659 leer_memoria
01A7   1283 1703      00660     banksel EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01A9   008D           00661     movwf EEADR ; Cargo la dirección.
                      00662 
01AA   1683 1703      00663     banksel EECON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01AC   138C           00664     bcf EECON1, EEPGD ; Apunto a la EEPROM
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01AD   140C           00665     bsf EECON1, RD ; Activo la lectura.
01AE   1283 1703      00666     banksel EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01B0   080C           00667     movf EEDAT, w ; Guardo el valor en w.
                      00668 
01B1   0008           00669     return ; leer_memoria
                      00670 
01B2                  00671 guardar_memoria
01B2   1683 1703      00672     banksel EECON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01B4   138C           00673     bcf EECON1, EEPGD ; Apunto a la EEPROM
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01B5   150C           00674     bsf EECON1, WREN ; Activo la escritura.
                      00675 
01B6   138B           00676     bcf INTCON, GIE ; Desactivo interrupciones.
01B7   1B8B           00677     btfsc INTCON, GIE
01B8   2???           00678     goto $-2
                      00679 
                      00680     ; SECCION INTOCABLE
01B9   3055           00681     movlw 0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BA   008D           00682     movwf EECON2
01BB   30AA           00683     movlw 0xAA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BC   008D           00684     movwf EECON2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BD   148C           00685     bsf EECON1, WR ; Se comienza la escritura.
                      00686     ; FIN SECCION INTOCABLE
                      00687 
01BE   178B           00688     bsf INTCON, GIE ; Activo las interrupciones.
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01BF   188C           00689     btfsc EECON1, WR
01C0   2???           00690     goto $-1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01C1   110C           00691     bcf EECON1, WREN
01C2   0008           00692     return ; guardar_memoria
                      00693         
                      00694 ; Configurar CONTADOR_TIMER1
01C3                  00695 re_iniciar_contador1
01C3   1283 1303      00696     banksel CONTADOR_TIMER1
01C5   3064           00697     movlw d'100'
01C6   00A9           00698     movwf CONTADOR_TIMER1
                      00699 
01C7   0008           00700     return ; re_iniciar_contador1
                      00701 
                      00702 ; Rutina de interrupción del tmr1.
01C8                  00703 interrupt_tmr1
                      00704     ; Decremento el contador.
01C8   1283 1303      00705     banksel CONTADOR_TIMER1
                      00706     ; INICIO IF
01CA   0BA9           00707             decfsz CONTADOR_TIMER1, f
                      00708             ; CONTADOR_TIMER <> 0 THEN
01CB   2???           00709             goto $+3
                      00710             ; ELSE
01CC   2???           00711             call guardar_memoria_VALOR_CONVERSION
01CD   2???           00712             call re_iniciar_contador1
                      00713     ; FIN IF
01CE   2???           00714     call re_iniciar_timer1
                      00715 
01CF   0008           00716     return ; interrupt_tmr1
                      00717 
                      00718 ; Interrupcion de escritura de la eepron.
01D0                  00719 interrupt_eeprom
01D0   1283 1303      00720     banksel PIR2
01D2   120D           00721     bcf PIR2, EEIF ; Limpio la interrupcion de la eeprom
                      00722 
01D3   0008           00723     return ; interrupt_eeprom
                      00724 
                      00725 ; Inicia el timer con el valor precargado, para una interrupción cada 100 ms.
01D4                  00726 re_iniciar_timer1
                      00727 ;;;;;;;;;;;; Calculo para la cantidad de tiempo ;;;;;;;;;;;;;;;;
                      00728     ; ValorTimer = ValorMaximoTimer - ((DelaySolicitado * Fosc) / (Prescalar * 4))
                      00729     ; Formula para 100 ms: ValorTimer = 65536 - ((100ms * 20Mhz) / (8 * 4)) = 3036
                      00730 
                      00731     ; Cargar 3036 (00001011 11011100)
01D4   1283 1303      00732     banksel PIR1
                      00733     
01D6   30DC           00734     movlw b'11011100' 
01D7   008E           00735     movwf  TMR1L
01D8   300B           00736     movlw b'00001011' 
01D9   008F           00737     movwf  TMR1H
                      00738     
01DA   100C           00739     bcf PIR1, TMR1IF ; Timer1 Overflow Interrupt Flag bit
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DB   0008           00740     return ; re_iniciar_timer1
                      00741 
                      00742 ; Realiza la conversion y almacena los valores en variables.
01DC                  00743 realizar_conversion
01DC   149F           00744     bsf ADCON0, GO ; Start conversion
01DD   189F           00745     btfsc ADCON0, GO ; Is conversion done?
01DE   2???           00746     goto $-1 ; No, test again
                      00747         
                      00748     ; Obtener el valor de la conversión.
01DF   1283 1303      00749     banksel ADRESH
01E1   081E           00750     movf ADRESH, w
01E2   1283 1303      00751     banksel VALOR_CONVERSION
01E4   00BD           00752     movwf VALOR_CONVERSION
                      00753         
01E5   0008           00754     return ; realizar_conversion
                      00755 
                      00756 ; Rutinas de contexto.
01E6                  00757 guardar_contexto
01E6   1283 1303      00758     banksel W_TEMP
01E8   00C3           00759     movwf W_TEMP  ; Guardo w.
01E9   0E03           00760     swapf STATUS, w ; Swap status en w.
01EA   00BA           00761     movwf STATUS_TEMP ; Guardo STATUS.
01EB   0008           00762     return ; guardar_contexto
                      00763     
01EC                  00764 cargar_contexto
01EC   1283 1303      00765     banksel STATUS_TEMP
01EE   0E3A           00766     swapf STATUS_TEMP, w
01EF   0083           00767     movwf STATUS
01F0   0EC3           00768     swapf W_TEMP, f
01F1   0E43           00769     swapf W_TEMP, w
01F2   0008           00770     return ; cargar_contexto
                      00771         
Warning[205]: Found directive in column 1. (end)
20C2 3EFF             00772 end
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
ASCII1                            00000022
ASCII2                            00000023
ASCII3                            00000024
ASCII_CONVERSION                  00000020
ASCII_TEMP                        00000021
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

CCPR2L                            0000001B
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
COCIENTE                          00000025
CONTADOR_                         00000026
CONTADOR_1                        00000027
CONTADOR_2                        00000028
CONTADOR_TIMER1                   00000029
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DELAY_1MS_CONTADOR_1              0000002A
DELAY_1MS_CONTADOR_2              0000002B
DELAY_CONTADOR                    0000002C
DIVIDENDO                         0000002D
DIVISOR_REGLA                     0000002E
D_A                               00000005
D_NOT_A                           00000005
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
GCEN                              00000007
GIE                               00000007
GO                                00000001
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

GO_DONE                           00000001
GO_NOT_DONE                       00000001
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ITERADOR                          0000002F
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MULT                              00000030
MULTIPLICANDO                     00000031
MULTIPLICANDO_REGLA               00000032
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRODH                             00000033
PRODL                             00000034
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PUNTERO_ACTUAL                    00000035
PWM1CON                           0000009B
R                                 00000002
RA0                               00000000
RA1                               00000001
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
REGLAE                            00000036
REGLAF                            00000037
RESTO                             00000038
RP0                               00000005
RP1                               00000006
RSEN                              00000001
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SIGUIENTE_PUNTERO                 00000039
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_TEMP                       0000003A
STATUS_TEMP_CASE                  0000003B
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP_W                            0000003C
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VALOR_CONVERSION                  0000003D
VALOR_CONVERSIONH                 00000041
VALOR_CONVERSIONL                 00000042
VALOR_CONVERSION_MEMORIA          0000003E
VALOR_CONVERSION_REGLA            0000003F
VALOR_CONVERSION_TEMP             00000040
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_TEMP                            00000043
W_TEMP_CASE                       00000044
WhileLoopInicio                   00000082
Z                                 00000002
_.org_1_000C                      0000000C
_.org_1_0012                      00000012
_.org_1_0018                      00000018
_.org_1_0050                      00000050
_.org_1_0064                      00000064
_.org_1_0092                      00000092
_.org_1_009C                      0000009C
_.org_1_00C7                      000000C7
_.org_1_00CC                      000000CC
_.org_1_0107                      00000107
_.org_1_0157                      00000157
_.org_1_019A                      0000019A
_.org_1_01B8                      000001B8
_.org_1_01C0                      000001C0
_.org_1_01CB                      000001CB
_.org_1_01DE                      000001DE
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
cargar_contexto                   000001EC
configuracion_inicial             0000001D
convertir_valor_dec               0000012B
dividir                           000000F0
enviar_conversion_usart_dec       000000A8
MPASM 5.84            OBLIGATORIO - FULL.ASM   11-22-2019  15:27:47         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

enviar_conversion_usart_hexa      00000139
enviar_w                          00000154
guardar_contexto                  000001E6
guardar_memoria                   000001B2
guardar_memoria_VALOR_CONVERSION  00000180
inicializar_eeprom                0000016D
interrupt                         00000008
interrupt_eeprom                  000001D0
interrupt_tmr1                    000001C8
interrupt_usart                   00000068
leer_memoria                      000001A7
leer_usart                        00000061
loop_dividir                      000000F5
main                              00000005
mainloop                          00000006
mapear_enviar_dec                 0000010A
mapear_enviar_hexa                00000151
mapear_hexa                       0000015C
multiplicar                       000000D9
multiplicar_loop                  000000E5
obtener_siguiente_puntero         0000018F
re_iniciar_contador1              000001C3
re_iniciar_timer1                 000001D4
realizar_conversion               000001DC
regla_de_tres                     000000BC
restar_dividir                    00000101
rutina_letra_A                    00000075
rutina_letra_H                    0000007A
rutina_letra_a                    0000009F
sumar_30                          00000163
sumar_37                          00000168

Errors   :     0
Warnings :    11 reported,     0 suppressed
Messages :    35 reported,     0 suppressed

